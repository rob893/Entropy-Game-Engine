# This workflow is triggered manually using the repository_dispatch event:
# https://help.github.com/en/actions/reference/events-that-trigger-workflows#external-events-repository_dispatch
#
# Input will be parsed as {confirm}:{branch to use}. If no branch is passed, it will default to master
# Examples:
#   `yes:dev` will run this workflow using the dev branch
#   `no:dev` will not run this workflow
#   `yes` will run this workflow using master branch
#
# This workflow is unable to use the cache action as it only supports push and pull request events as of now.
#
# Secrets used:
# NPM_TOKEN: access token for NPM. Obtained on NPM site.

name: Manual Publish

on:
  repository_dispatch:
    types: [manual_publish]

env:
  INPUT: ${{ github.event.client_payload.Confirm }}

jobs:
  check_response:
    runs-on: ubuntu-latest
    name: Check Response
    steps:
      - name: Check Response
        run: |
          IN=$INPUT
          arrIN=(${IN//:/ })
          response=${arrIN[0]}
          if [ ${response^^} != 'YES' ]
          then
            exit 1 
          fi

  lint_and_test:
    needs:
      - check_response
    runs-on: ubuntu-latest
    name: Lint and Test
    steps:
      - name: Set branch
        run: |
          IN=$INPUT
          arrIN=(${IN//:/ })
          if [ ${#arrIN[@]} -gt 1 ]
          then
            echo "::set-env name=BRANCH::${arrIN[1]}"
          else
            echo "::set-env name=BRANCH::master"
          fi
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test

  publish_packages:
    runs-on: ubuntu-latest
    name: Publish Packages
    needs:
      - check_response
      - lint_and_test
    steps:
      - name: Set branch
        run: |
          IN=$INPUT
          arrIN=(${IN//:/ })
          if [ ${#arrIN[@]} -gt 1 ]
          then
            echo "::set-env name=BRANCH::${arrIN[1]}"
          else
            echo "::set-env name=BRANCH::master"
          fi
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Install dependencies
        run: npm install
      - name: Build packages
        run: npm run compile
      - name: Build games
        run: npx lerna run build-game
      - name: Authenticate with GitHub
        run: |
          # git config http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo x-access-token:${{secrets.GITHUB_TOKEN}} | base64)"
          git remote set-url origin https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git
          git checkout $BRANCH
          git config user.name "Github Actions"
          git config user.email "bot@github.com"
      - name: Stash changes
        run: git stash
      - name: Authenticate with NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish
        run: npx lerna publish --yes
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
